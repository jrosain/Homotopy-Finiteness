module Lib.Data.Coprod where

data Coprod (A B : U) : U = inl (x : A) | inr (y : B)

ind-Coprod (A B : U) (P : Coprod A B -> U) (f : (x : A) -> P (inl x)) (g : (y : B) -> P (inr y)) : (z : Coprod A B) -> (P z) = split
  inl x -> f x
  inr y -> g y

Coprod/map (A B A' B' : U) (f : A -> A') (g : B -> B') : (z : Coprod A B) -> (Coprod A' B') =
  ind-Coprod A B (\ _. Coprod A' B') (\ x. inl (f x)) (\ y. inr (g y))

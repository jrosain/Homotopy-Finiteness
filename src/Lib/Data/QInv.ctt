module Lib.Data.QInv where

import Stdlib.Prelude
import Lib.Data.Map

has-inverse (A B : U) (f : A -> B) : U =
  Sg (B -> A) (\ g. (Htpy B (\ _. B) (map/comp B A B f g) (id B)) *
                    (Htpy A (\ _. A) (map/comp A B A g f) (id A)))

QInv/map (A B : U) (f : A -> B) (i : has-inverse A B f) : B -> A =
  i.1

QInv/right-htpy (A B : U) (f : A -> B) (i : has-inverse A B f) : Htpy B (\ _. B) (map/comp B A B f (QInv/map A B f i)) (id B) =
  i.2.1

QInv/left-htpy (A B : U) (f : A -> B) (i : has-inverse A B f) : Htpy A (\ _. A) (map/comp A B A (QInv/map A B f i) f) (id A) =
  i.2.2

module Lib.Prop.MiscPaths where

import Stdlib.Prelude

tr/refl-path (A : U) (x : A) (P : A -> U) (u : P x) : Path (P x) (tr A x x (refl A x) P u) u =
  \ i. tr/refl A x P i u

tr/path (A : U) (x y : A) (p : Path A x y) (P : U) (u : P) : Path P (tr A x y p (\ _. P) u) u =
  J A x (\ z q. Path P (tr A x z q (\ _. P) u) u) (tr/refl-path A x (\ _. P) u) y p

tr/inv-path (A : U) (x y : A) (p : Path A x y) (P : U) (u : P) : Path P u (tr A x y p (\ _. P) u) =
  inv P (tr A x y p (\ _. P) u) u (tr/path A x y p P u)

PathO/refl (A : U) (x : A) (P : A -> U) (u v : P x) (q : Path (P x) u v) : PathO A x x (refl A x) P u v =
  comp (P x) (tr A x x (refl A x) P u) u (tr/refl-path A x P u) v q

inv/involutive (A : U) (x y : A) (p : Path A x y) : Path (Path A x y) (inv A y x (inv A x y p)) p =
  J A x (\ z q. Path (Path A x z) (inv A z x (inv A x z q)) q)
        (comp (Path A x x) (inv A x x (inv A x x (refl A x))) (inv A x x (refl A x))
              (ap (Path A x x) (Path A x x) (\ q. inv A x x q) (inv A x x (refl A x)) (refl A x) (inv/refl A x))
              (refl A x) (inv/refl A x)) y p

inv/involutive' (A : U) (x y : A) (p : Path A x y) : Path (Path A x y) p (inv A y x (inv A x y p)) =
  inv (Path A x y) (inv A y x (inv A x y p)) p (inv/involutive A x y p)

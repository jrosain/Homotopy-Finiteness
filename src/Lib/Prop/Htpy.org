#+NAME: Htpy
#+AUTHOR: Johann Rosain

* Homotopies Properties

  #+begin_src ctt
  module Lib.Prop.Htpy where
  #+end_src

This file states some properties of homotopies.

** Packages imports

#+begin_src ctt
  import Stdlib.Prelude
  import Lib.FunExt
  import Lib.FundamentalTheorem
  import Lib.ContrMap
#+end_src

** Equivalence property

*** Symmetry

    #+begin_src ctt
  Htpy/sym (A : U) (B : A -> U) (f g : (x : A) -> B x) (H : Htpy A B f g) : Htpy A B g f =
    \ x. inv (B x) (f x) (g x) (H x)

  Htpy'/sym (A B : U) : (f : A -> B) -> (g : A -> B) -> Htpy' A B f g -> Htpy' A B g f =
    Htpy/sym A (\ _. B)

  Htpy/inv : (A : U) -> (B : A -> U) -> (f g : (x : A) -> B x) -> (H : Htpy A B f g) -> Htpy A B g f = Htpy/sym

  Htpy'/inv : (A B : U) -> (f g : A -> B) -> (H : Htpy' A B f g) -> Htpy' A B g f = Htpy'/sym
    #+end_src

*** Reflexivity

    #+begin_src ctt
  Htpy/refl (A : U) (B : A -> U) (f : (x : A) -> B x) : Htpy A B f f =
    \ x. refl (B x) (f x)

  Htpy'/refl (A B : U) : (f : A -> B) -> Htpy' A B f f =
    Htpy/refl A (\ _. B)
    #+end_src

** The total homotopy is contractible
Remark that the total space \Sigma (g : (x : A) \to B x) (f \sim g) is contractible iff htpy-eq is a family of equivalences by the fundamental theorem of identity types. But we know that htpy-eq is a family of equivalences, thus the result follows.
   #+begin_src ctt
  Htpy/is-contr-total-htpy (A : U) (B : A -> U) (f : (x : A) -> B x) : is-contr (Sg ((x : A) -> B x) (\ g. Htpy A B f g)) =
    fundamental-theorem-id' ((x : A) -> B x) (\ g. Htpy A B f g) f
      (htpy-eq A B f) (htpy-eq/is-equiv A B f)
   #+end_src

#+RESULTS:
: Typecheck has succeeded.

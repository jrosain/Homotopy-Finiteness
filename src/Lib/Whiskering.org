#+NAME: Whiskering
#+AUTHOR: Johann Rosain

* Whiskering

  #+begin_src ctt
  module Lib.Whiskering where
  #+end_src

Whiskering operations are operations that allow the composition of homotopies with functions. There are two situations where such a thing is useful:
  * when there are three functions =f, g : A -> B=, =h : B -> C= and a homotopy =f ~ g= ;
  * when there are three functions =f : A -> B=, =g, h : B -> C= and a homotopy =g ~ h=.
These are called the /left-whisker/ and /right-whisker/, and this file provides their definition.

** Packages imports
   #+begin_src ctt
  import Stdlib.Prelude
  import Lib.Data.Map
   #+end_src

** Definition

   #+begin_src ctt
  left-whisk (A B C : U) (f g : A -> B) (h : B -> C) (H : Htpy A (\ _. B) f g) : Htpy A (\ _. C) (map/comp A B C h f) (map/comp A B C h g) =
    \ x. ap B C h (f x) (g x) (H x)

  right-whisk (A B C : U) (g h : B -> C) (H : Htpy B (\ _. C) g h) (f : A -> B) : Htpy A (\ _. C) (map/comp A B C g f) (map/comp A B C h f) =
    \ x. H (f x)
   #+end_src

#+RESULTS:
: Typecheck has succeeded.
